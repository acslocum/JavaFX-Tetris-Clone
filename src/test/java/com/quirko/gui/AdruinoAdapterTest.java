package com.quirko.gui;

import static org.junit.Assert.*;

import org.junit.Test;

import com.quirko.app.GameController;

public class AdruinoAdapterTest {
	byte CONTROL = (byte)255;
	byte R = 5;

	@Test
	public void shouldShowBlankArrayOnStartup() {
		//all blank
		byte [] expected = {
				CONTROL,
				0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0,
                
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0,
                
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0,	                    
                
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0,
                
                0,0,0,0,0,
                0,0,0,0,0,
                0,0,0,0,0,
                0,0,0,0,0,
                0,0,0,0,0 };
		

		int [][] boardMatrix = { {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
							   };

		int [][] nextMatrix = { {0, 0, 0, 0},
								{0, 0, 0, 0},
								{0, 0, 0, 0},
								{0, 0, 0, 0}
							  };

		byte [] actual = GameController.getArduinoBoardMatrix(boardMatrix, nextMatrix);

		assertArrayEquals(expected, actual);
	}
	
	@Test
	public void shouldShowFirstPieceAndABlankField() {
		//first piece is a teewee
		byte [] expected = {
				CONTROL,
				0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0,
                
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0,
                
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0,	                    
                
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0,
                
                0,0,0,0,0,
                0,0,0,0,0,
                0,R,R,R,0,
                0,0,R,0,0,
                0,0,0,0,0 };
		
		int [][] boardMatrix = { {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
			  					};

		int [][] nextMatrix = { {0, 0, 0, 0},
								{R, R, R, 0},
								{0, R, 0, 0},
								{0, 0, 0, 0}
							  };
		
		byte [] actual = GameController.getArduinoBoardMatrix(boardMatrix, nextMatrix);
		assertArrayEquals(expected, actual);
	}
	
	@Test
	public void shouldShowYellowSquareBottomLeftAndRedTetrisNext() {
		//smashboy left corner, hero up next
		byte [] expected = {
				CONTROL,
				0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0,
                
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0,
                
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0,	                    
                
                0,0,0,0,0, 0,0,0,0,0,
                0,0,0,0,0, 0,0,0,0,0, 
                0,0,0,0,0, 0,0,0,0,0, 
                R,R,0,0,0, 0,0,0,0,0, 
                R,R,0,0,0, 0,0,0,0,0,
                
                0,0,0,0,0,
                0,0,0,R,0,
                0,0,0,R,0,
                0,0,0,R,0,
                0,0,0,R,0 };
		
		int [][] boardMatrix = { {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
								 {R, R, 0, 0, 0, 0, 0, 0, 0, 0},
								 {R, R, 0, 0, 0, 0, 0, 0, 0, 0}
							  };
		
		int [][] nextMatrix = { {0, 0, R, 0},
								{0, 0, R, 0},
								{0, 0, R, 0},
								{0, 0, R, 0}
							  };
		byte [] actual = GameController.getArduinoBoardMatrix(boardMatrix, nextMatrix);
		assertArrayEquals(expected, actual);
	}

}
